from abc import abcmeta, abstractmethod

class Human(object):
    """Класс Человек, входят общие данные о человеке"""
    def __init__(self, firstname, lastname, skills):
        """инициализация параметров"""

    def add_skills(self):
        """добавление скилов"""

    def remote_skills(self):
        """добавление скилов"""
    
class Teacher(Human):
    
    
    
"""Нужно больше знанией о множественном наседование, пытался реализовать код, но понял что нужно больше времени и знаний"""

#ИДЕЯ

"""
есть абстрактный класс Human 

Есть два класса Teacher и Student который наследуют от класса Human основные параметры. 
Причем можно масштабировать систему добавив классы Группа студентов, у которых может быть несколько курсов, имея группы, старосты
Есть класс Course который будет работать с классами Teacher и Group_Student. 

Если дальше развивать, то можно дополнить классы Факультеты с наборами курсов, групп студентов, преподавателями. 

Едиснтвенное что смущает, это нужно тестировать и смотреть правильность наследования и иерархии . Может ли course наследовать учителя, и наоборот одновременно.  
"""
